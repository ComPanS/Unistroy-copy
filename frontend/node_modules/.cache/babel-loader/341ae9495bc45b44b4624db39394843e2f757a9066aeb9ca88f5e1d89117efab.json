{"ast":null,"code":"// import React from \"react\";\n// import { Provider } from \"react-redux\";\n// import { BrowserRouter } from \"react-router-dom\";\n// import ReactDOM from \"react-dom/client\";\n// import App from \"./App\";\n// import CssBaseline from \"@mui/material/CssBaseline\";\n\n// import \"./index.scss\";\n// import { ThemeProvider } from \"@mui/material\";\n// import { theme } from \"./theme\";\n// import store from \"./redux/store\";\n\n// const root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\n// root.render(\n//     <>\n//         <CssBaseline />\n//         <ThemeProvider theme={theme}>\n//             <BrowserRouter>\n//                 <Provider store={store}>\n//                     <App />\n//                 </Provider>\n//             </BrowserRouter>\n//         </ThemeProvider>\n//     </>\n// );\n\n// CssBaseline – сбрасывает стандартные стили браузера, чтобы стилизация выглядела одинаково на всех платформах.\n// ThemeProvider – предоставляет кастомную тему для всего приложения, которую вы создали в theme.js.\n// BrowserRouter – отвечает за маршрутизацию в приложении, позволяя переключаться между страницами без перезагрузки.\n// Provider – оборачивает приложение, чтобы сделать Redux-хранилище доступным для всех дочерних компонентов.\n// App – это основной компонент, который содержит всё приложение.\n// ReactDOM.createRoot – функция, которая монтирует React-приложение в элемент DOM с ID root.","map":{"version":3,"names":[],"sources":["C:/Users/nazmi/Documents/Sites/unistroy/frontend/src/index.js"],"sourcesContent":["// import React from \"react\";\r\n// import { Provider } from \"react-redux\";\r\n// import { BrowserRouter } from \"react-router-dom\";\r\n// import ReactDOM from \"react-dom/client\";\r\n// import App from \"./App\";\r\n// import CssBaseline from \"@mui/material/CssBaseline\";\r\n\r\n// import \"./index.scss\";\r\n// import { ThemeProvider } from \"@mui/material\";\r\n// import { theme } from \"./theme\";\r\n// import store from \"./redux/store\";\r\n\r\n// const root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n\r\n// root.render(\r\n//     <>\r\n//         <CssBaseline />\r\n//         <ThemeProvider theme={theme}>\r\n//             <BrowserRouter>\r\n//                 <Provider store={store}>\r\n//                     <App />\r\n//                 </Provider>\r\n//             </BrowserRouter>\r\n//         </ThemeProvider>\r\n//     </>\r\n// );\r\n\r\n// CssBaseline – сбрасывает стандартные стили браузера, чтобы стилизация выглядела одинаково на всех платформах.\r\n// ThemeProvider – предоставляет кастомную тему для всего приложения, которую вы создали в theme.js.\r\n// BrowserRouter – отвечает за маршрутизацию в приложении, позволяя переключаться между страницами без перезагрузки.\r\n// Provider – оборачивает приложение, чтобы сделать Redux-хранилище доступным для всех дочерних компонентов.\r\n// App – это основной компонент, который содержит всё приложение.\r\n// ReactDOM.createRoot – функция, которая монтирует React-приложение в элемент DOM с ID root."],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}