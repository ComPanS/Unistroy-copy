{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../../axios\";\nexport const fetchUserInfo = createAsyncThunk(\"auth/fetchUserInfo\", async () => {\n  const {\n    data\n  } = await axios.get(\"/auth/me\");\n  return data;\n});\nconst initialState = {\n  data: null,\n  status: \"loading\"\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setUserData: (state, action) => {\n      state.data = action.payload;\n    },\n    resetUserData: state => {\n      state.data = null;\n    }\n  },\n  extraReducers: {\n    [fetchUserInfo.fulfilled]: (state, action) => {\n      state.data = action.payload;\n      state.status = \"loaded\";\n    },\n    [fetchUserInfo.pending]: state => {\n      state.status = \"loading\";\n    },\n    [fetchUserInfo.rejected]: state => {\n      state.status = \"error\";\n    }\n  }\n});\nexport const authReducer = authSlice.reducer;\nexport const {\n  setUserData,\n  resetUserData\n} = authSlice.actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchUserInfo","data","get","initialState","status","authSlice","name","reducers","setUserData","state","action","payload","resetUserData","extraReducers","fulfilled","pending","rejected","authReducer","reducer","actions"],"sources":["C:/Users/nazmi/Documents/Sites/unistroy/frontend/src/redux/slices/auth.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"../../axios\";\r\n\r\nexport const fetchUserInfo = createAsyncThunk(\r\n    \"auth/fetchUserInfo\",\r\n    async () => {\r\n        const { data } = await axios.get(\"/auth/me\");\r\n        return data;\r\n    }\r\n);\r\n\r\nconst initialState = {\r\n    data: null,\r\n    status: \"loading\",\r\n};\r\n\r\nconst authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState,\r\n    reducers: {\r\n        setUserData: (state, action) => {\r\n            state.data = action.payload;\r\n        },\r\n        resetUserData: (state) => {\r\n            state.data = null;\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [fetchUserInfo.fulfilled]: (state, action) => {\r\n            state.data = action.payload;\r\n            state.status = \"loaded\";\r\n        },\r\n        [fetchUserInfo.pending]: (state) => {\r\n            state.status = \"loading\";\r\n        },\r\n        [fetchUserInfo.rejected]: (state) => {\r\n            state.status = \"error\";\r\n        },\r\n    },\r\n});\r\n\r\nexport const authReducer = authSlice.reducer;\r\nexport const { setUserData, resetUserData } = authSlice.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,aAAa;AAE/B,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CACzC,oBAAoB,EACpB,YAAY;EACR,MAAM;IAAEG;EAAK,CAAC,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,UAAU,CAAC;EAC5C,OAAOD,IAAI;AACf,CACJ,CAAC;AAED,MAAME,YAAY,GAAG;EACjBF,IAAI,EAAE,IAAI;EACVG,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,SAAS,GAAGR,WAAW,CAAC;EAC1BS,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACNC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACR,IAAI,GAAGS,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDC,aAAa,EAAGH,KAAK,IAAK;MACtBA,KAAK,CAACR,IAAI,GAAG,IAAI;IACrB;EACJ,CAAC;EACDY,aAAa,EAAE;IACX,CAACb,aAAa,CAACc,SAAS,GAAG,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC1CD,KAAK,CAACR,IAAI,GAAGS,MAAM,CAACC,OAAO;MAC3BF,KAAK,CAACL,MAAM,GAAG,QAAQ;IAC3B,CAAC;IACD,CAACJ,aAAa,CAACe,OAAO,GAAIN,KAAK,IAAK;MAChCA,KAAK,CAACL,MAAM,GAAG,SAAS;IAC5B,CAAC;IACD,CAACJ,aAAa,CAACgB,QAAQ,GAAIP,KAAK,IAAK;MACjCA,KAAK,CAACL,MAAM,GAAG,OAAO;IAC1B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMa,WAAW,GAAGZ,SAAS,CAACa,OAAO;AAC5C,OAAO,MAAM;EAAEV,WAAW;EAAEI;AAAc,CAAC,GAAGP,SAAS,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}