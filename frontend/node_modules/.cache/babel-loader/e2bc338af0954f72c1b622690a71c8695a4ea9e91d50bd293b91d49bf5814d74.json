{"ast":null,"code":"import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport \"./index.scss\";\nimport { ThemeProvider } from \"@mui/material\";\nimport { theme } from \"./theme\";\nimport store from \"./redux/store\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(_Fragment, {\n  children: \"]\"\n}, void 0, false));\n\n// CssBaseline – сбрасывает стандартные стили браузера, чтобы стилизация выглядела одинаково на всех платформах.\n// ThemeProvider – предоставляет кастомную тему для всего приложения, которую вы создали в theme.js.\n// BrowserRouter – отвечает за маршрутизацию в приложении, позволяя переключаться между страницами без перезагрузки.\n// Provider – оборачивает приложение, чтобы сделать Redux-хранилище доступным для всех дочерних компонентов.\n// App – это основной компонент, который содержит всё приложение.\n// ReactDOM.createRoot – функция, которая монтирует React-приложение в элемент DOM с ID root.","map":{"version":3,"names":["React","Provider","BrowserRouter","ReactDOM","App","CssBaseline","ThemeProvider","theme","store","Fragment","_Fragment","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","children"],"sources":["C:/Users/nazmi/Documents/Sites/unistroy/frontend/src/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\n\r\nimport \"./index.scss\";\r\nimport { ThemeProvider } from \"@mui/material\";\r\nimport { theme } from \"./theme\";\r\nimport store from \"./redux/store\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n\r\nroot.render(\r\n    <>\r\n    ]\r\n        {/* <CssBaseline />\r\n        <ThemeProvider theme={theme}>\r\n            <BrowserRouter>\r\n                <Provider store={store}>\r\n                    <App />\r\n                </Provider>\r\n            </BrowserRouter>\r\n        </ThemeProvider> */}\r\n    </>\r\n);\r\n\r\n// CssBaseline – сбрасывает стандартные стили браузера, чтобы стилизация выглядела одинаково на всех платформах.\r\n// ThemeProvider – предоставляет кастомную тему для всего приложения, которую вы создали в theme.js.\r\n// BrowserRouter – отвечает за маршрутизацию в приложении, позволяя переключаться между страницами без перезагрузки.\r\n// Provider – оборачивает приложение, чтобы сделать Redux-хранилище доступным для всех дочерних компонентов.\r\n// App – это основной компонент, который содержит всё приложение.\r\n// ReactDOM.createRoot – функция, которая монтирует React-приложение в элемент DOM с ID root."],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,WAAW,MAAM,2BAA2B;AAEnD,OAAO,cAAc;AACrB,SAASC,aAAa,QAAQ,eAAe;AAC7C,SAASC,KAAK,QAAQ,SAAS;AAC/B,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,IAAI,GAAGV,QAAQ,CAACW,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEjEH,IAAI,CAACI,MAAM,cACPL,OAAA,CAAAF,SAAA;EAAAQ,QAAA,EAAE;AAEE,gBAQF,CACN,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}