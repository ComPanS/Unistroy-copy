{"ast":null,"code":"// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n// import axios from \"../../axios\";\n\n// export const fetchPosts = createAsyncThunk(\"posts/fetchPosts\", async () => {\n//     const { data } = await axios.get(\"/posts\");\n//     return data;\n// });\n\n// const initialState = {\n//     posts: [],\n//     postStatus: \"loading\",\n// };\n\n// const postsSlice = createSlice({\n//     name: \"posts\",\n//     initialState,\n//     reducers: {\n//         removePost: (state, action) => {\n//             state.posts = state.posts.filter(\n//                 (obj) => obj._id !== action.payload\n//             );\n//         },\n//     },\n//     extraReducers: {\n//         [fetchPosts.fulfilled]: (state, action) => {\n//             state.posts = action.payload;\n//             state.postStatus = \"loaded\";\n//         },\n//         [fetchPosts.pending]: (state, action) => {\n//             state.posts = [];\n//             state.postStatus = \"loading\";\n//         },\n//         [fetchPosts.rejected]: (state, action) => {\n//             state.posts = [];\n//             state.postStatus = \"error\";\n//         },\n//     },\n// });\n\n// export const postsReducer = postsSlice.reducer;\n// export const { removePost } = postsSlice.actions;","map":{"version":3,"names":[],"sources":["C:/Users/nazmi/Documents/Sites/unistroy/frontend/src/redux/slices/posts.js"],"sourcesContent":["// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n// import axios from \"../../axios\";\r\n\r\n// export const fetchPosts = createAsyncThunk(\"posts/fetchPosts\", async () => {\r\n//     const { data } = await axios.get(\"/posts\");\r\n//     return data;\r\n// });\r\n\r\n// const initialState = {\r\n//     posts: [],\r\n//     postStatus: \"loading\",\r\n// };\r\n\r\n// const postsSlice = createSlice({\r\n//     name: \"posts\",\r\n//     initialState,\r\n//     reducers: {\r\n//         removePost: (state, action) => {\r\n//             state.posts = state.posts.filter(\r\n//                 (obj) => obj._id !== action.payload\r\n//             );\r\n//         },\r\n//     },\r\n//     extraReducers: {\r\n//         [fetchPosts.fulfilled]: (state, action) => {\r\n//             state.posts = action.payload;\r\n//             state.postStatus = \"loaded\";\r\n//         },\r\n//         [fetchPosts.pending]: (state, action) => {\r\n//             state.posts = [];\r\n//             state.postStatus = \"loading\";\r\n//         },\r\n//         [fetchPosts.rejected]: (state, action) => {\r\n//             state.posts = [];\r\n//             state.postStatus = \"error\";\r\n//         },\r\n//     },\r\n// });\r\n\r\n// export const postsReducer = postsSlice.reducer;\r\n// export const { removePost } = postsSlice.actions;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}